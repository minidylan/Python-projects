import tkinter as tk

# Function to add a task from the entry widget to the listbox
def add_task():
    task = entry.get()  # Get the task from the entry widget
    if task:  # Check if the task is not empty
        listbox.insert(tk.END, task)  # Insert the task at the end of the listbox
        entry.delete(0, tk.END)  # Clear the entry widget

# Function to remove the selected task from the listbox
def remove_task():
    try:
        listbox.delete(listbox.curselection())  # Delete the selected task
    except:
        pass  # Do nothing if no task is selected


# Function to save To-Do-List to a txt file
def save_tasks():
    with open("tasks.txt", "w") as file: 
        tasks = listbox.get(0, tk.END)
        for task in tasks:
            file.write(task + "\n")

# Function to load saved file
def load_tasks():
    try:
        with open("tasks.txt", "r") as file:
            for task in file:
                listbox.insert(tk.END, task.strip())
    except FileNotFoundError:
        pass


# Create the main window
root = tk.Tk()
root.title("My To-Do-List")  # Set the title of the window

# Create an entry widget for entering tasks
entry = tk.Entry(root, width=50)
entry.pack()  # Place the entry widget in the window

# Create a listbox widget to display tasks
listbox = tk.Listbox(root, width=50, height=10)
listbox.pack()  # Place the listbox in the window

# Create a button for adding tasks
add_button = tk.Button(root, text="Add Task", command=add_task)
add_button.pack(padx=10, pady=10)  # Place the add button in the window

# Create a button for removing the selected task
remove_button = tk.Button(root, text="Remove Selected Task", command=remove_task)
remove_button.pack(padx=10, pady=10)  # Place the remove button in the window

load_tasks()

root.protocol("WM_DELETE_WINDOW", save_tasks) #Save task when the application is closed

# Start the Tkinter event loop
root.mainloop()
